const KEY='e2eeKeyJwk'; async function key(){const e=localStorage.getItem(KEY); if(e){return await crypto.subtle.importKey('jwk',JSON.parse(e),{name:'AES-GCM',length:256},true,['encrypt','decrypt'])} const k=await crypto.subtle.generateKey({name:'AES-GCM',length:256},true,['encrypt','decrypt']); localStorage.setItem(KEY,JSON.stringify(await crypto.subtle.exportKey('jwk',k))); return k} export async function encryptBytes(p:Uint8Array){const k=await key(); const iv=crypto.getRandomValues(new Uint8Array(12)); const c=new Uint8Array(await crypto.subtle.encrypt({name:'AES-GCM',iv},k,p)); return {iv:iv,cipher:c}} export async function decryptBytes(iv:Uint8Array,c:Uint8Array){const k=await key(); const p=new Uint8Array(await crypto.subtle.decrypt({name:'AES-GCM',iv},k,c)); return p}
