import type { Task } from './types';
function download(name:string, content:string, type='text/plain'){ const blob=new Blob([content],{type}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=name; a.click(); URL.revokeObjectURL(url); }
export function exportCSV(tasks:Task[]){ const rows=[['id','title','assignee','dueDate','status','privacy','note'],...tasks.filter(t=>t.privacy!=='private').map(t=>[t.id,t.title,t.assignee||'',t.dueDate||'',t.status,t.privacy,t.note||''])]; const csv=rows.map(r=>r.map(v=>`"${String(v).replaceAll('"','""')}"`).join(',')).join('\n'); download('tasks.csv',csv,'text/csv'); }
export function openPrintView(tasks:Task[]){ const safe=tasks.filter(t=>t.privacy!=='private'); const html=`<!doctype html><html><head><meta charset='utf-8'><title>Tasks PDF</title><style>body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial;padding:24px} table{width:100%;border-collapse:collapse} th,td{border:1px solid #ddd;padding:8px;font-size:12px} th{text-align:left}</style></head><body><h1>Tasks</h1><table><thead><tr><th>Title</th><th>Assignee</th><th>Due</th><th>Status</th><th>Note</th></tr></thead><tbody>${safe.map(t=>`<tr><td>${escapeHtml(t.title)}</td><td>${escapeHtml(t.assignee||'')}</td><td>${t.dueDate?new Date(t.dueDate).toLocaleDateString():''}</td><td>${t.status}</td><td>${escapeHtml(t.note||'')}</td></tr>`).join('')}</tbody></table><script>window.onload=()=>window.print()</script></body></html>`; const url=URL.createObjectURL(new Blob([html],{type:'text/html'})); window.open(url,'_blank'); }
export function exportICS(tasks:Task[]){ const safe=tasks.filter(t=>t.privacy!=='private' && t.dueDate); const lines=['BEGIN:VCALENDAR','VERSION:2.0','PRODID:-//CoBuy//EN']; for(const t of safe){ const dt=new Date(t.dueDate!).toISOString().replace(/[-:]/g,'').replace(/\.\d{3}Z$/,'Z'); lines.push('BEGIN:VEVENT'); lines.push(`UID:${t.id}@cobuy`); lines.push(`DTSTAMP:${nowUTC()}`); lines.push(`DTSTART:${dt}`); lines.push(`SUMMARY:${escapeICS(t.title)}`); if(t.note) lines.push(`DESCRIPTION:${escapeICS(t.note)}`); lines.push('END:VEVENT'); } lines.push('END:VCALENDAR'); download('tasks.ics',lines.join('\r\n'),'text/calendar'); }
function nowUTC(){return new Date().toISOString().replace(/[-:]/g,'').replace(/\.\d{3}Z$/,'Z');}
function escapeHtml(s:string){return s.replace(/[&<>]/g,c=>({'&':'&amp;','<':'&lt;','>':'&gt;'} as any)[c]);}
function escapeICS(s:string){return s.replace(/[\n,;]/g,ch=>({'\n':'\\n', ',':'\\,',';':'\\;'} as any)[ch]);}
